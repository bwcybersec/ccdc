#!/bin/bash
connectionId="$((RANDOM%90+10)) $((RANDOM%90+10)) $((RANDOM%90+10))"
sshAuthUser="root"
USER=$(whoami)

function auth {
    if [[ "$DISPLAY" != "" && "$(which gdialog 2>/dev/null)" != "" ]]
    then
        dialog="gdialog"
    elif [[ "$(which whiptail 2>/dev/null)" != "" ]]
    then
        dialog="whiptail"
    elif [[ "$(which dialog 2>/dev/null)" != "" ]]
    then
        dialog="dialog"
    else
        echo "You need whiptail or dialog installed!"
        exit 1
    fi

    if [[ "$DISPLAY" != "" && "$dialog" != "gdialog" ]]
    then
        if [[ ! -e /tmp/.zenityalert ]]
        then
            $dialog --title "SSH Confirmation" --msgbox "Install zenity to get GUI alerts!" 0 0
        fi
        > /tmp/.zenityalert
    fi

    if [[ "$USER" != "$sshAuthUser" ]]
    then
        $dialog --title "SSH Confirmation" --msgbox "You must be user \"$sshAuthUser\" to use this program!" 0 0
        exit 1 
    fi

    items=
    count=0
    while read item
    do
        items="$items $item Select_$item"
        defaultItem="$item"
        ((count++))
    done < <(ls /tmp/ssh-request-* 2>/dev/null | sed 's/.*-//g' | while read line
    do
        [[ -e "/proc/$(cat "/tmp/ssh-auth-$line")" ]] && echo "$line"
    done)

    if [[ "$count" == "0" ]]
    then
        return
    elif [[ "$count" != "1" ]]
    then
        selection=$($dialog --title "SSH Confirmation" --menu "$question" 0 0 0 $items 3>&1 1>&2 2>&3)
        if [[ "$?" != "0" ]]
        then
            return
        fi
    else
        selection="$defaultItem"
    fi

    reason=$(cat "/tmp/ssh-request-$selection")
    $dialog --title "SSH Confirmation" --yesno "Would you like to allow this connection?"$'\n'"$reason" 0 0 --defaultno
    if [[ "$?" == "0" ]]
    then
        > "/tmp/ssh-response-$selection"
    else
        echo "no" > "/tmp/ssh-response-$selection"
    fi
    sleep 2
    rm "/tmp/ssh-response-$selection"    
}

function wait {
    while true
    do
        auth
        sleep 5
    done
}

if [[ "$SSH_CLIENT" == "" || "$SKIP_AUTH" == "true" ]]
then
    if [[ "$1" =~ (wait|auth) ]]
    then
        "$1"
        exit
    fi
    exec bash "$@"
fi

if [[ "$(which whiptail)" != "" ]]
then
    dialog="whiptail"
elif [[ "$(which dialog)" != "" ]]
then
    dialog="dialog"
else
    dialog="echo"
    fallback="1"
fi

read -rd ' ' ip <<< "$SSH_CLIENT"
if [[ -e "/tmp/ssh-auth-$ip" && -e "/proc/$(cat "/tmp/ssh-auth-$ip")" ]]
then
    $dialog --title "SSH Confirmation" --msgbox "Only one connection attempt allowed per IP!" 0 0
    exit 1
fi
echo "$$" > "/tmp/ssh-auth-$ip"
chmod 666 "/tmp/ssh-auth-$ip"
if [[ -e "/tmp/ssh-request-$ip" ]]
then
    rm "/tmp/ssh-request-$ip"
fi

if [[ "$1" != "" || "$fallback" == "1" ]]
then
    echo "ID: $connectionId
Connection: $SSH_CLIENT
Command: $*" > "/tmp/ssh-request-$ip"
else
    reason=$($dialog --title "SSH Confirmation" --inputbox "Please enter a connection reason." 0 0 3>&1 1>&2 2>&3)
    if [[ "$?" != "0" ]]
    then
        logger "sshjail: Canceled connection $SSH_CLIENT."
        exit 2
    fi
    echo "ID: $connectionId
Connection: $SSH_CLIENT
Reason: $reason" > "/tmp/ssh-request-$ip"
fi
chmod 666 "/tmp/ssh-request-$ip"

if [[ "$1" == "" && "$fallback" != "1" ]]
then
    seq 0 2 100 | while read line
    do
        sleep 1
        echo "$line"
        if [[ -e "/tmp/ssh-response-$ip" ]]
        then
            echo 100
            break
        fi
    done | $dialog --title "SSH Confirmation" --gauge "Waiting for user to approve connection..."$'\n'"$(cat /tmp/ssh-request-$ip)" 0 0 0
else
    seq 0 2 100 | while read line
    do
        sleep 1
        if [[ -e "/tmp/ssh-response-$ip" ]]
        then
            break
        fi
    done
fi

if [[ ! -e "/tmp/ssh-response-$ip" ]]
then
    rm "/tmp/ssh-request-$ip"
    $dialog --title "SSH Confirmation" --msgbox "Connection attempt timed out!" 0 0
    logger "sshjail: Timeout connection $SSH_CLIENT."
    exit 1
fi

if [[ "$(stat -c '%U' "/tmp/ssh-response-$ip")" != "$sshAuthUser" ]]
then
    $dialog --title "SSH Confirmation" --msgbox "An unauthorized user tried to authenticate you!" 0 0
    exit 1
fi

if [[ "$(cat "/tmp/ssh-response-$ip")" == "no" ]]
then
    rm "/tmp/ssh-request-$ip"
    $dialog --title "SSH Confirmation" --msgbox "Your request has been rejected!" 0 0
    logger "sshjail: Rejected connection $SSH_CLIENT."
    exit 1
fi

rm "/tmp/ssh-request-$ip"
rm "/tmp/ssh-auth-$ip"
export SKIP_AUTH=true
bash "$@"

#DOWNLOAD_FINISHED

