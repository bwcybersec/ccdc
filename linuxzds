#!/bin/bash
read -sp "Autopassword Key: " key
read -sp $'\n'"Autopassword Key (again): " key2
echo

read -p "Autopassword Prefix: " prefix

if [[ "$key" != "$key2" ]]
then
    echo "Keys don't match, try again."
    exit
fi

if type apt-get &>/dev/null
then
    expected_dist=apt
    apt install curl openssh-server vim wget snmpd
else
    expected_dist=rpm
    if grep --quiet 'ID=\"centos\"' /etc/os-release then
        yum install -y epel-release
    fi
    yum install -y wget vim openssh-server clamav curl net-snmp
fi

function autopassword {
    hash=$(echo -n "$prefix$1$key" | sha256sum | xxd -r -p | base64 | tr -d '+/')
    "${hash:0:8}-${hash:8:8}"
}

function giveuserautopass {
    echo "$1:$(autopassword $1)" | chpasswd
}

# Set user passwords and sweep keys
mkdir -p /var/log/bash_hist
mkdir -p /var/log/auth_keys
mkdir -p /var/log/zds

chmod 700 /var/log/bash_hist
chmod 700 /var/log/auth_keys

if [[ -e /root ]]
then
    mv -f /root/.bash_history /var/log/bash_hist/bash_history_ir_root 2> /dev/null
    mv -f /foot/.ssh/authorized_keys /var/log/auth_keys/root.authorized_keys 2> /dev/null
    giveuserautopass "root"
fi
if [[ -e /home/sysadmin ]]
then
    admin_user="sysadmin"
    mv -f "/home/$admin_user/.bash_history" /var/log/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/log/auth_keys/$admin_user.authorized_keys" 2> /dev/null
    giveuserautopass $admin_user
fi
if [[ -e /home/admin ]]
then
    admin_user="admin"
    mv -f "/home/$admin_user/.bash_history" /var/log/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/log/auth_keys/$admin_user.authorized_keys" 2> /dev/null
    giveuserautopass $admin_user
fi
if [[ -e /home/administrator ]]
then
    admin_user="administrator"
    mv -f "/home/$admin_user/.bash_history" /var/log/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/log/auth_keys/$admin_user.authorized_keys" 2> /dev/null
    giveuserautopass $admin_user
fi

# Set up firewall
cat << EOF > /etc/firewall.bash 
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

iptables -t nat -F
iptables -t mangle -F
iptables -F
iptables -X

iptables -A INPUT -i lo -j ACCEPT

iptables -A INPUT -p tcp -m tcp --dport 22   -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 80   -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 123  -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 3306 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 7000 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 8088 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 8089 -j ACCEPT

iptables -A INPUT -p udp -m udp --dport 53   -j ACCEPT

iptables -A INPUT -p icmp -j ACCEPT

# NTP
iptables -A OUTPUT -p udp --dport 123 -j ACCEPT
iptables -A INPUT  -p udp --sport 123 -j ACCEPT

# SNMP
iptables -A OUTPUT -p udp --dport 161 -j ACCEPT
iptables -A INPUT  -p udp --sport 161 -j ACCEPT
iptables -A OUTPUT -p udp --dport 162 -j ACCEPT
iptables -A INPUT  -p udp --sport 162 -j ACCEPT


iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

iptables -A INPUT -m limit --limit 15/minute -j LOG --log-level 7 --log-prefix "Dropped by firewall: "
iptables -A INPUT -j DROP
EOF

chmod 0744 /etc/firewall.bash

cat << EOF > /etc/systemd/system/zdsfirewall.service
[Unit]
Description=ZDSFirewall
After=syslog.target network.target

[Service]
Type=oneshot
ExecStart=/etc/firewall.bash
ExecStop=/sbin/iptables -F
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

# Disable other firewalls
if [[ "$expected_dist" == "rpm" ]] then
yum list installed firewalld && systemctl disable --now firewalld
elif [[ "$expected_dist" == "apt" ]]
service ufw status && systemctl disable --now ufw
fi

# Throw the switch
systemctl enable --now zdsfirewall.service

# no red team bad red team
chattr -i /etc/group /etc/shadow /etc/passwd
chown root:root /etc/group
chown root:root /etc/shadow
chown root:root /etc/passwd
chown root:root /etc/sudoers

netstat -an | grep LISTEN | tee netstat.log
        
# Install splunk
wget -O /tmp/splunkforwarder.tgz 'https://download.splunk.com/products/universalforwarder/releases/8.2.4/linux/splunkforwarder-8.2.4-87e2dda940d1-Linux-x86_64.tgz'
tar xzvf /tmp/splunkforwarder.tgz -C /opt
/opt/splunkforwarder/bin/splunk start --accept-license


# ClamAV
freshclam

echo running full system clamscan in the background, results stored at /var/log/zds/clamscan.log
clamscan --recursive / &> /var/log/zds/clamscan.log &

# RKHunter
curl -L https://downloads.sourceforge.net/project/rkhunter/rkhunter/1.4.6/rkhunter-1.4.6.tar.gz -O
tar zxf rkhunter-1.4.6.tar.gz
pushd rkhunter-1.4.6
./installer.sh --install
popd

rkhunter --propupd 
echo running rkhunter in the background results stored at /var/log/zds/rkhunter.log
rkhunter --check &> /var/log/zds/rkhunter.log &

