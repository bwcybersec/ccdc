#!/bin/bash

# Backup configs
mkdir /var/zds
cp -r /etc /var/zds/etc_backup

if type apt-get &>/dev/null
then
    expected_dist=apt
    apt install curl openssh-server vim wget snmpd clamav nmap
else
    expected_dist=rpm
    if grep --quiet 'ID=\"centos\"' /etc/os-release || [[ -f /etc/centos-release ]]; then
        yum install -y epel-release
    fi
    yum install -y wget vim openssh-server clamav curl net-snmp nmap
fi

# Set user passwords and sweep keys
mkdir -p /var/zds/bash_hist
mkdir -p /var/zds/auth_keys
mkdir -p /var/log/zds

if [[ -e /root ]]
then
    mv -f /root/.bash_history /var/zds/bash_hist/bash_history_ir_root 2> /dev/null
    mv -f /foot/.ssh/authorized_keys /var/zds/auth_keys/root.authorized_keys 2> /dev/null
fi
if [[ -e /home/sysadmin ]]
then
    admin_user="sysadmin"
    mv -f "/home/$admin_user/.bash_history" /var/zds/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/zds/auth_keys/$admin_user.authorized_keys" 2> /dev/null
fi
if [[ -e /home/admin ]]
then
    admin_user="admin"
    mv -f "/home/$admin_user/.bash_history" /var/log/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/zds/auth_keys/$admin_user.authorized_keys" 2> /dev/null
fi
if [[ -e /home/administrator ]]
then
    admin_user="administrator"
    mv -f "/home/$admin_user/.bash_history" /var/log/bash_hist/bash_history_ir 2> /dev/null
    mv -f "/home/$admin_user/.ssh/authorized_keys" "/var/zds/auth_keys/$admin_user.authorized_keys" 2> /dev/null
fi

chmod 700 /var/log/bash_hist
chmod 700 /var/log/auth_keys

# No root login ssh
sed -i 's/#\?\(PermitRootLogin\s*\).*$/\1 no/' /etc/ssh/sshd_config

# Disable other firewalls
if [[ "$expected_dist" == "rpm" ]]; then
yum list installed firewalld && systemctl disable --now firewalld
elif [[ "$expected_dist" == "apt" ]]; then
service ufw status && systemctl disable --now ufw
fi

# no red team bad red team
# chattr -i /etc/group /etc/shadow /etc/passwd
chown root:root /etc/group
if [ $(getent group shadow) ]; then
chown root:shadow /etc/shadow
else
chown root:root /etc/shadow
fi
chown root:root /etc/passwd
chown root:root /etc/sudoers

netstat -an | grep LISTEN | tee netstat.log
        
# Install splunk
if [ ! -d "/opt/splunk" ]; then
curl -ko /tmp/splunkforwarder.tgz 'https://download.splunk.com/products/universalforwarder/releases/8.2.4/linux/splunkforwarder-8.2.4-87e2dda940d1-Linux-x86_64.tgz'
tar xzvf /tmp/splunkforwarder.tgz -C /opt
echo "Enter the splunk forwarder username and password (yes twice)"
/opt/splunkforwarder/bin/splunk start --accept-license 
/opt/splunkforwarder/bin/splunk enable boot-start -systemd-managed 0
/opt/splunkforwarder/bin/splunk add forward-server 172.20.241.20:9997
/opt/splunkforwarder/bin/splunk set deploy-poll 172.20.241.20:8089
/opt/splunkforwarder/bin/splunk restart
fi

# ClamAV
freshclam

echo running full system clamscan in the background, results stored at /var/log/zds/clamscan.log
clamscan --recursive / &> /var/log/zds/clamscan.log &

# RKHunter
curl -L https://downloads.sourceforge.net/project/rkhunter/rkhunter/1.4.6/rkhunter-1.4.6.tar.gz -Ok
tar zxf rkhunter-1.4.6.tar.gz
pushd rkhunter-1.4.6
./installer.sh --install &> /var/log/zds/rkhunter.install.log
popd

rkhunter --propupd 
echo running rkhunter in the background results stored at /var/log/zds/rkhunter.log
rkhunter --check &> /var/log/zds/rkhunter.log &

function prompt {
    #[prompt] [default] [variable]
    read -p "$1 [$2] " "$3"
    if [[ "${!3}" == "" ]]
    then
        read "$3" <<< "$2"
    fi
}

echo "Writing new /etc/issue.net"
prompt "Domain name?" "frog.com" domain

cat << EOF > /etc/issue.net
This computer system/network is the property of $domain. It is for authorized use only. By using this system, all users acknowledge notice of, and agree to comply with, the Companyâ€™s Acceptable Use of Information Technology Resources Policy (AUP). Users have no personal privacy rights in any materials they place, view, access, or transmit on this system. The Company complies with state and federal law regarding certain legally protected confidential information, but makes no representation that any uses of this system will be private or confidential. Any or all uses of this system and all files on this system may be intercepted, monitored, recorded, copied, audited, inspected, and disclosed to authorized Company and law enforcement personnel, as well as authorized individuals of other organizations. By using this system, the user consents to such interception, monitoring, recording, copying, auditing, inspection, and disclosure at the discretion of authorized Company personnel. Unauthorized or improper use of this system may result in administrative disciplinary action civil charges/criminal penalties, and/or other sanctions as set forth in the Companys AUP By continuing to use this system you indicate your awareness of and consent to these terms and conditions of use. ALL USERS SHALL LOG OFF OF A $domain OWNED SYSTEM IMMEDIATELY IF SAID USER DOES NOT AGREE TO THE CONDITIONS STATED ABOVE.
EOF

echo Downloading and installing smartfw
curl -kO https://raw.githubusercontent.com/bwcybersec/ccdc/main/smartfw
chmod +x smartfw
./smartfw

cp smartfw /etc/smartfw
echo "@reboot root /etc/smartfw" >> /etc/crontab
